(()=>{"use strict";const t=(t,e=document)=>e.querySelector(t),e=(t,e=document)=>e.querySelectorAll(t),s=class{appendIn(t){t.appendChild(this.current)}remove(){this.current.remove()}};class i extends s{state={};change=[];handlers={};_parantEle;_slection;constructor(e,s={}){if(super(e),e instanceof HTMLElement)this.current=e;else{if("string"!=typeof e||!t(e))throw new Error("Invalid argument");this.current=t(e)}this.handlers=s,this._init()}_init(){this._genrateVariable();for(const t in this.handlers)this.current.addEventListener(t,(e=>this.handlers[t](e,this.state)))}_genrateVariable(){[...e("*",this.current),this.current].forEach((t=>{t.getAttributeNames().forEach((e=>{this._setVariables(t.getAttributeNode(e))})),t.childNodes.forEach((t=>{t.nodeValue&&this._setVariables(t)}))}))}_setVariables(t){const e=[...new Set(t.nodeValue.match(/{{.+?}}/g))];0!==e.length&&this.change.push({variable:e,value:t.nodeValue,element:t})}async setState(t){if("function"==typeof t&&(t=t(this.state)),"object"!=typeof t)throw new Error("Invalid argument");const e={...this.state,...t};if(JSON.stringify(this.state)!==JSON.stringify(e))return await this._render(t,e),this}async _render(t,e){Object.keys(t).forEach((t=>{this.change.forEach((s=>{if(!s.variable.includes(`{{${t}}}`))return;const i=s.value.replaceAll(/{{.+?}}/g,(t=>{return e[(s=t,s.replaceAll("{","").replaceAll("}",""))]??"";var s}));i!==s.element.nodeValue&&(s.element.nodeValue=i)}))})),this.state=e}}const r=(t,e={})=>new i(t,e),n=class extends s{constructor(...t){super(...t)}has(t){return!!this.list[t]}get(t){if(this.has(t)){const{current:e,state:s,parantEle:i}=this.list[t];return{current:e,state:s,parantEle:i}}return{}}add(t){return this.has(t?.id)||this.setState([...this.state,t]),this}remove(t){return this.has(t)?(this.setState(this.state.filter((e=>e.id!==t))),this):this}update(t){return this.has(t?.id)?(this.setState(this.state.map((e=>e.id===t.id?t:e))),this):this}addOrUpdate(t){return this.has(t?.id)?this.update(t):this.add(t),this}};class a extends n{state=[];handler={};templateEle;list=[];_slection;constructor(e,s={}){if(super(e,s),e instanceof HTMLElement)this.current=e;else{if("string"!=typeof e||!t(e))throw new Error("Invalid argument");this.current=t(e)}this.handler=s}template(e){if(!e)throw new Error("Please Provide => Slector | Dom Element | Html String ");if(e instanceof HTMLElement)return this.templateEle=e.cloneNode(!0),this;const s=e.match(/<.+?>/g);if(s){if(s.length<2)throw new Error("Please Provide Proper HtmlTag, Like\n\n <div> List Ele {{Id}}</div> \n\n");return this.templateEle=(new DOMParser).parseFromString(e,"text/html").querySelector("body> *"),this}const i=t(e);if(i)return this.templateEle=i.cloneNode(!0),this;throw new Error("Invalid argument")}async setState(t){if(JSON.stringify(this.state)===JSON.stringify(t))return;const e=await this.state.length,s=await t.length;if(e<s)for(let i=e;i<s;i++)await this._genrateListItem(t[i]);if(e>s){const e=await t.map((t=>t.id));await this.state.forEach((t=>{!e.includes(t.id)&&this._removeListItem(t.id)}))}await this._Render(t)}_genrateListItem(t){if(!this.templateEle instanceof HTMLElement)throw new Error("Please use template() Method for creating List item Template");this.list[t.id]=r(this.templateEle.cloneNode(!0),this.handler),this.list[t.id].appendIn(this.current)}_removeListItem(t){this.has(t)&&(this.get(t).current.remove(),delete this.list[t])}_Render(t){0!==t.length&&(t.forEach((t=>{this.list[t.id].setState(t)})),this.state=t)}}window.StateFull=r,window.StateFullList=(t,e={})=>new a(t,e),window.C=(t=document.body,e="toggle",s="active")=>t.classList[e](s),window.CA=(t=[],e="toggle",s="active")=>t.forEach((t=>t.classList[e](s))),window.F=(t=document.body,e="div")=>t.closest(e),window.Q=t,window.QA=e})();